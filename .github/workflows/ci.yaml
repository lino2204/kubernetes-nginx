name: Deploy EKS and Nginx

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    outputs:
      tfplan-exists: ${{ steps.check-plan.outputs.tfplan-exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Save Terraform Plan
        run: |
          mkdir -p artifact
          mv tfplan artifact/
        if: success()

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: artifact/

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan
          path: artifact/

      - name: Apply Terraform Plan
        run: terraform apply -auto-approve artifact/tfplan

  deploy-nginx:
    needs: terraform-apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Configure kubectl
        run: aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Deploy Nginx
        run: |
          kubectl apply -f kubernetes/nginx-configmap.yaml
          kubectl apply -f kubernetes/nginx-deployment.yaml
          kubectl apply -f kubernetes/nginx-service.yaml
