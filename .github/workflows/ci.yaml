name: Deploy to AWS

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List Files (Debugging Step)
        run: ls -R
        working-directory: ./infrastructure/eks

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infrastructure/eks
        env:
          TF_VAR_role_arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./infrastructure/eks
        env:
          TF_VAR_role_arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infrastructure/eks
        env:
          TF_VAR_role_arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Apply Terraform Plan
        run: terraform apply -auto-approve tfplan
        working-directory: ./infrastructure/eks
        env:
          TF_VAR_role_arn: ${{ secrets.AWS_ROLE_TO_ASSUME }}
